version: '3.8'

services:
  test-db:
    image: postgres:14
    environment:
      POSTGRES_DB: blog_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d blog_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-api:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://test_user:test_password@test-db:5432/blog_test
      PORT: 3000
      CLOUDINARY_CLOUD_NAME: your_cloud_name
      CLOUDINARY_API_KEY: your_api_key
      CLOUDINARY_API_SECRET: your_api_secret
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      test-db:
        condition: service_healthy
    command: ["npm", "run", "test:api"]

  newman:
    image: postman/newman:alpine
    volumes:
      - ./thunder-collection.json:/etc/newman/collection.json
      - ./test-environment.json:/etc/newman/environment.json
      - ./test/fixtures:/etc/newman/fixtures
      - ./newman-reports:/etc/newman/reports
    depends_on:
      - test-api
    command: [
      "run", "/etc/newman/collection.json",
      "-e", "/etc/newman/environment.json",
      "--working-dir", "/etc/newman/fixtures",
      "-r", "cli,htmlextra",
      "--reporter-htmlextra-export", "/etc/newman/reports/report.html"
    ] 